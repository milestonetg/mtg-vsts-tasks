{
  "$schema": "https://raw.githubusercontent.com/Microsoft/vsts-task-lib/master/tasks.schema.json",
  "id": "807e40e0-4fa7-11e7-9a75-2966c46aa703",
  "name": "MtgDartTools",
  "friendlyName": "MTG Dart Tools",
  "description": "Provides tasks for installing the Dart SDK as well as building and testing Dart packages.",
  "helpMarkDown": "Uses build_runner to build packages. Dart packages must be compatible with Dart 2.x. The test action uses package:test. If your package uses a different test runner, please use the run action instead.",
  "author": "Milestone",
  "category": "Utility",
  "runsOn": [
    "Agent"
  ],
  "demands": [],
  "version": {
    "Major": 2,
    "Minor": 1,
    "Patch": 5
  },
  "minimumAgentVersion": "2.0.0",
  "instanceNameFormat": "Dart",
  "groups": [
    {
      "name": "sdkDownloadOptions",
      "displayName": "SDK Download Options",
      "isExpanded": true,
      "visibleRule": "action = install"
    },
    {
      "name": "sourceOptions",
      "displayName": "Source Options",
      "isExpanded": true,
      "visibleRule": "action != install"
    },
    {
      "name": "getOptions",
      "displayName": "Get Options",
      "isExpanded": false,
      "visibleRule": "action = get"
    },
    {
      "name": "testOptions",
      "displayName": "Test Options",
      "isExpanded": true,
      "visibleRule": "action = test"
    },
    {
      "name": "buildOptions",
      "displayName": "Build Options",
      "isExpanded": true,
      "visibleRule": "action = build"
    },
    {
      "name": "runOptions",
      "displayName": "Run Options",
      "isExpanded": true,
      "visibleRule": "action = run"
    },
    {
      "name": "logging",
      "displayName": "Logging",
      "isExpanded": false,
      "visibleRule": "action != install"
    }
  ],
  "inputs": [
    {
      "name": "action",
      "type": "pickList",
      "label": "Action",
      "defaultValue": "build",
      "required": true,
      "helpMarkDown": "The Dart-related action to be ran.\n\n - Install SDK: Installs the Dart SDK or uses a cached version if available in the Azure Pipelines tool cache.\n - Get Dependencies: Runs pub get.\n - Test: Runs pub run test.\n - Build: Builds packages with package:build_runner.\n - Run: Uses pub run to run any Dart executable.",
      "options": {
        "install": "Install SDK",
        "get": "Get Dependencies",
        "test": "Test",
        "build": "Build",
        "run": "Run"
      },
      "properties": {
        "EditableOptions": "False"
      }
    },
    {
      "name": "sourcePath",
      "type": "filePath",
      "label": "Source Path",
      "groupName": "sourceOptions",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Path to the Dart package (should be the directory containing pubspec.yaml)."
    },
    {
      "name": "sdkChannel",
      "type": "pickList",
      "label": "SDK Channel",
      "groupName": "sdkDownloadOptions",
      "defaultValue": "stable",
      "required": false,
      "helpMarkDown": "Which SDK release channel to use.",
      "options": {
        "stable": "Stable",
        "beta": "Beta",
        "dev": "Dev"
      }, 
      "properties": {
        "EditableOptions": "True"
      }
    },
    {
      "name": "sdkVersion",
      "type": "string",
      "label": "SDK Version",
      "groupName": "sdkDownloadOptions",
      "defaultValue": "2.8.4",
      "required": true,
      "helpMarkDown": "Which version of the Dart SDK to download (note: this task will not work with 1.x versions)."
    },
    {
      "name": "getArguments",
      "type": "string",
      "label": "Additional Arguments",
      "groupName": "getOptions",
      "required": false,
      "helpMarkDown": "Additional arguments to pass to pub get."
    },
    {
      "name": "testPlatform",
      "type": "string",
      "label": "Platform(s)",
      "groupName": "testOptions",
      "required": false,
      "helpMarkDown": "The comma-separated platform(s) on which to run the tests (e.g. vm, chrome, phantomjs, firefox, ie, node). Defaults to vm."
    },
    {
      "name": "testTags",
      "type": "string",
      "label": "Tags",
      "groupName": "testOptions",
      "required": false,
      "helpMarkDown": "Run only tests with all of the specified tags. Supports boolean selector syntax."
    },
    {
      "name": "testExcludeTags",
      "type": "string",
      "label": "Exclude Tags",
      "groupName": "testOptions",
      "required": false,
      "helpMarkDown": "Don't run tests with any of the specified tags. Supports boolean selector syntax."
    },
    {
      "name": "testTimeout",
      "type": "string",
      "label": "Default Timeout",
      "groupName": "testOptions",
      "required": false,
      "helpMarkDown": "The default test timeout. For example: 15s, 2x, none (defaults to 30s)"
    },
    {
      "name": "testArguments",
      "type": "string",
      "label": "Additional Arguments",
      "groupName": "testOptions",
      "required": false,
      "helpMarkDown": "Additional arguments to pass to package:test."
    },
    {
      "name": "release",
      "type": "boolean",
      "label": "Release Mode",
      "groupName": "buildOptions",
      "defaultValue": true,
      "required": true,
      "helpMarkDown": "Whether the package should be built in release mode."
    },
    {
      "name": "lowResourcesMode",
      "type": "boolean",
      "label": "Low Resources Mode",
      "groupName": "buildOptions",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Reduce the amount of memory consumed by the build process. This will slow down builds but allow them to progress in resource constrained environments."
    },
    {
      "name": "config",
      "type": "string",
      "label": "Build Configuration",
      "groupName": "buildOptions",
      "required": false,
      "defaultValue": "",
      "helpMarkDown": "Which build.yaml file to use. If specified, build_runner will use `build.<name>.yaml`, where `<name>` is the value set here. If left blank, `build.yaml` will be used (if it exists)."
    },
    {
      "name": "buildInputFolder",
      "type": "string",
      "label": "Package Folder To Build",
      "groupName": "buildOptions",
      "required": false,
      "defaultValue": "",
      "helpMarkDown": "The specific package folder to build (e.g. 'web'). If specified, only the given folder will be built, if empty then all valid package directories to build will be built."
    },
    {
      "name": "destinationPath",
      "type": "filePath",
      "label": "Output Path",
      "groupName": "buildOptions",
      "defaultValue": "$(Build.ArtifactStagingDirectory)",
      "required": true,
      "helpMarkDown": "Path that will contain the build output."
    },
    {
      "name": "buildArguments",
      "type": "string",
      "label": "Additional Arguments",
      "groupName": "buildOptions",
      "required": false,
      "helpMarkDown": "Additional arguments to pass to build_runner."
    },
    {
      "name": "runExecutable",
      "type": "string",
      "label": "Executable",
      "groupName": "runOptions",
      "required": true,
      "defaultValue": "test",
      "helpMarkDown": "The name of the dart file in bin or a path to another dart file to run. Can additionally target an executable in a dependency in the form <dependency>:<executable>."
    },
    {
      "name": "runArguments",
      "type": "string",
      "label": "Arguments",
      "groupName": "runOptions",
      "required": false,
      "helpMarkDown": "Arguments to pass to the executable."
    },
    {
      "name": "verbose",
      "type": "boolean",
      "label": "Verbose Logging",
      "groupName": "logging",
      "defaultValue": false,
      "required": true,
      "helpMarkDown": "Whether verbose logging should be used."
    }
  ],
  "execution": {
    "Node": {
      "target": "mtg-dart-tools.js",
      "argumentFormat":  ""
    }
  }
}